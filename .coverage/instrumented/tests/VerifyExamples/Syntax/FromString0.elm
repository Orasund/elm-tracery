module VerifyExamples.Syntax.FromString0 exposing (..)

-- This file got generated by [elm-verify-examples](https://github.com/stoeffel/elm-verify-examples).
-- Please don't modify this file by hand!

import Test
import Expect

import Syntax exposing (..)
import Dict



output : Syntax
output =
    Dict.fromList
        [ ( "origin"
          , Choose 
              [ [Print "Hello ", Print "\\", Print " World ",Print "#"]
              , [Insert "statement", Print " and ", Insert "statement"]
              ]
          )
        , ( "statement"
          , Dict.fromList
              [ ( "origin"
                , Let [ Print "my ", Insert "myPet", Print " is the ", Insert "complement"]
                )
              , ( "myPet",Let [Insert "pet"])
              , ( "pet", Choose [[Print "cat"],[Print "dog"]])
              , ( "complement"
                , Choose
                    [ [ Print "smartest ", Insert "myPet", Print " in the world"]
                    , [ Print "fastest ", Insert "myPet", Print " that i know of"]
                    ]
                )
              ] 
                |> With
            )
        ]
input : String
input =
   """{ "origin" : [ "Hello \\\\\\\\ World \\\\#", "#statement# and #statement#" ]
   , "statement" :
     { "origin" : "my #myPet# is the #complement#"
     , "myPet": "#pet#"
     , "pet" : ["cat","dog"]
     , "complement" : ["smartest #myPet# in the world","fastest #myPet# that i know of"]
     }
   }"""



spec0 : Test.Test
spec0 =
    Test.test "#fromString: \n\n    input |> fromString\n    --> Ok output" <|
        \() ->
            Expect.equal
                (
                input |> fromString
                )
                (
                Ok output
                )