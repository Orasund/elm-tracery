module VerifyExamples.Grammar.FromString0 exposing (..)

-- This file got generated by [elm-verify-examples](https://github.com/stoeffel/elm-verify-examples).
-- Please don't modify this file by hand!

import Test
import Expect

import Grammar exposing (..)
import Dict



output : Grammar
output =
      Grammar
        { constant = Dict.empty
        , variable = Dict.fromList
            [ ( "origin"
              , [ [Print "Hello ", Print "\\", Print " World ",Print "#"]
                , [Insert "statement", Print " and ", Insert "statement"]
                ]
              )
            ]
        , subGrammar =
            Dict.fromList
            [   ( "statement"
                , Grammar
                  { constant = Dict.fromList
                    [ ( "origin"
                      , [ Print "my ", Insert "myPet", Print " is the ", Insert "complement"]
                      )
                    , ( "myPet", [Insert "pet"])
                    ]
                  , variable = Dict.fromList
                    [ ( "pet", [[Print "cat"],[Print "dog"]])
                    , ( "complement"
                      , [ [ Print "smartest ", Insert "myPet", Print " in the world"]
                        , [ Print "fastest ", Insert "myPet", Print " that i know of"]
                        ]
                      )
                    ]
                  , subGrammar = Dict.empty
                  }
                )
            ]
        }
input : String
input =
   """{ "origin" : [ "Hello \\\\\\\\ World \\\\#", "#statement# and #statement#" ]
   , "statement" :
     { "origin" : "my #myPet# is the #complement#"
     , "myPet": "#pet#"
     , "pet" : ["cat","dog"]
     , "complement" : ["smartest #myPet# in the world","fastest #myPet# that i know of"]
     }
   }"""



spec0 : Test.Test
spec0 =
    Test.test "#fromString: \n\n    input |> fromString\n    --> Ok output" <|
        \() ->
            Expect.equal
                (
                input |> fromString
                )
                (
                Ok output
                )