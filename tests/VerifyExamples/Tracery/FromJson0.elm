module VerifyExamples.Tracery.FromJson0 exposing (..)

-- This file got generated by [elm-verify-examples](https://github.com/stoeffel/elm-verify-examples).
-- Please don't modify this file by hand!

import Test
import Expect

import Tracery exposing (..)
import Result.Extra
import Random
import Json.Decode



generate : String -> String
generate json =
    json
        |> Tracery.fromJson
        |> Result.Extra.unpack
            Json.Decode.errorToString
            (\generator ->
                Random.step generator seed
                    |> Tuple.first
            )
seed : Random.Seed
seed =
    Random.initialSeed 40



spec0 : Test.Test
spec0 =
    Test.test "#fromJson: \n\n    \"\"\"\n    { \"origin\": [\"My #cat#\",\"My #dog#\"]\n    , \"cat\":\n      { \"origin\":\"cat is named #name#\"\n      , \"name\": [\"Cleopatra\",\"Cesar\"]\n      }\n    , \"dog\":\n      { \"origin\":\"dog is named #name#\"\n      , \"name\": [\"Athena\",\"Zeus\"]\n      }\n    }\n    \"\"\"\n    |> generate\n    --> \"My dog is named Athena\"" <|
        \() ->
            Expect.equal
                (
                """
                { "origin": ["My #cat#","My #dog#"]
                , "cat":
                  { "origin":"cat is named #name#"
                  , "name": ["Cleopatra","Cesar"]
                  }
                , "dog":
                  { "origin":"dog is named #name#"
                  , "name": ["Athena","Zeus"]
                  }
                }
                """
                |> generate
                )
                (
                "My dog is named Athena"
                )